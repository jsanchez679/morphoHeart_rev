# Form implementation generated from reading ui file 'C:\Users\Noel\Desktop\prompt_ok_cancel_comboBox.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(378, 276)
        Dialog.setStyleSheet("QDialog{background-color: rgb(255, 255, 255);}")
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.mH_logo_XS = QtWidgets.QLabel(parent=Dialog)
        self.mH_logo_XS.setMinimumSize(QtCore.QSize(120, 30))
        self.mH_logo_XS.setMaximumSize(QtCore.QSize(120, 30))
        self.mH_logo_XS.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.mH_logo_XS.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.mH_logo_XS.setObjectName("mH_logo_XS")
        self.horizontalLayout.addWidget(self.mH_logo_XS, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.textEdit = QtWidgets.QTextEdit(parent=Dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setMinimumSize(QtCore.QSize(360, 80))
        self.textEdit.setMaximumSize(QtCore.QSize(390, 80))
        self.textEdit.setStyleSheet("QTextEdit {background-color: rgba(0,0,0,0);\n"
"font: 25 11pt \"Calibri Light\";\n"
"font-family: \"Calibri Light\";\n"
"}\n"
"\n"
"                    ")
        self.textEdit.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.textEdit.setDocumentTitle("")
        self.textEdit.setReadOnly(True)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout.addWidget(self.textEdit)
        self.comboBox = QtWidgets.QComboBox(parent=Dialog)
        self.comboBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox.sizePolicy().hasHeightForWidth())
        self.comboBox.setSizePolicy(sizePolicy)
        self.comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.comboBox.setMaximumSize(QtCore.QSize(16777215, 20))
        self.comboBox.setStyleSheet("QComboBox {\n"
"    border: 1px solid gray;\n"
"    font: 25 10pt \"Calibri Light\";\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"     background: rgb(255, 255, 255);\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"    background:rgba(170, 0, 127, 100);\n"
"}\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    border: 1px solid darkgray;\n"
"    selection-background-color:  rgba(162, 0, 122,180);\n"
"    font: 25 10pt \"Calibri Light\";\n"
"}\n"
"")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.verticalLayout.addWidget(self.comboBox)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem1)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=Dialog)
        self.buttonBox.setStyleSheet("QDialogButtonBox QPushButton{\n"
"color: rgb(39, 39, 39);\n"
"font: 11pt \"Calibri Light\";\n"
"height:20;\n"
"padding:0px;\n"
"width:120;\n"
"background-color: rgb(211, 211, 211);\n"
"border-radius: 10px;\n"
"border-width: 1px;\n"
"border-style: outset;\n"
"border-color: rgb(66, 66, 66);\n"
"}\n"
"\n"
"QDialogButtonBox QPushButton:hover{\n"
"background-color: #eb6fbd;\n"
"border-color: #672146\n"
"}\n"
"\n"
"")
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setCenterButtons(True)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.mH_logo_XS.setText(_translate("Dialog", "<html><head/><body><p><br/></p></body></html>"))
        self.textEdit.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Calibri Light\'; font-size:11pt; font-weight:24; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">XXX</p></body></html>"))
        self.textEdit.setPlaceholderText(_translate("Dialog", "XXX"))
        self.comboBox.setItemText(0, _translate("Dialog", "--select--"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
